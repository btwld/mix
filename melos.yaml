# yaml-language-server: $schema=./schemas/melos.yaml.schema.json
name: mix_workspace

packages:
  - packages/*
  - packages/mix/example
  - packages/mix_generator/example
  - examples/*
  - packages/*/demo

sdkPath: .fvm/flutter_sdk
command:
  bootstrap:
    environment:
      sdk: ">=3.9.0 <4.0.0"
      flutter: ">=3.35.0"
    dependencies:
      meta: ^1.15.0
    dev_dependencies:
      flutter_lints: ^6.0.0
      dart_code_metrics_presets: ^2.24.0
      build_runner: ^2.4.9
  publish:
    hooks:
      pre: melos run gen

categories:
  flutter_projects: 
    - packages/mix
    - packages/mix_lint
    - packages/mix_lint_test
    - packages/annotations
  dart_projects:
    - packages/mix_generator

scripts:
  # ANALYSIS & LINTING
  analyze:
    run: |
      melos exec -c 4 -- dart analyze . && \
      melos exec -c 4 --depends-on="dart_code_metrics_presets" -- dcm analyze . --fatal-style --fatal-warnings
    description: Run all static analysis checks (dart + DCM)

  lint:
    run: |
      melos exec --depends-on="dart_code_metrics_presets" -- dcm fix . && \
      melos exec -- dart fix --apply && \
      melos exec -- dart format .
    description: Fix all linting issues and format code

  # FORMATTING
  format:
    run: melos exec -- dart format .
    description: Format all Dart files

  format:check:
    run: melos exec -- dart format --output=none --set-exit-if-changed .
    description: Check formatting without applying changes

  # TESTING
  test:
    run: melos run test:flutter && melos run test:dart
    description: Run all tests

  test:flutter:
    run: melos exec --category=flutter_projects -- flutter test 
    description: Run Flutter tests
    packageFilters:
      dirExists: test

  test:dart:
    run: melos exec --category=dart_projects -- dart test
    description: Run Dart tests
    packageFilters:
      dirExists: test

  test:coverage:
    run: melos exec --category=flutter_projects -- flutter test --coverage
    description: Run tests with coverage
    packageFilters:
      dirExists: test

  # CODE GENERATION
  gen:
    run: melos run gen:clean && melos exec --order-dependents --depends-on="build_runner" -- dart run build_runner build --delete-conflicting-outputs
    description: Generate code for all packages

  gen:watch:
    run: melos exec --order-dependents --depends-on="build_runner" -- dart run build_runner watch --delete-conflicting-outputs
    description: Watch mode for code generation

  gen:clean:
    run: melos exec --order-dependents --depends-on="build_runner" -- dart run build_runner clean
    description: Clean generated code

  # UTILITIES
  custom_lint_analyze:
    run: melos exec --depends-on="mix_lint" dart pub run custom_lint

  exports:
    run: melos exec --scope="mix" dart run ../../scripts/exports.dart .
    description: Generate exports for the mix package
  
  verify_version_pubspec_changelog:
    run: ./scripts/verify_changelogs.sh packages
    description: Verify that all packages have the same version

  api-check:
    run: dart scripts/api_check.dart
    description: Check API compatibility for mix packages
