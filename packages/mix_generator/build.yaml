targets:
  $default:
    builders:
      spec:
        enabled: true
        generate_for:
          exclude:
            - test
            - example
      dto:
        enabled: true
        generate_for:
          exclude:
            - test
            - example
      utility:
        enabled: true
        generate_for:
          exclude:
            - test
            - example

builders:
  spec:
    import: "package:mix_generator/mix_generator.dart"
    builder_factories: ["specDefinition"]
    build_extensions: { ".dart": ["spec.g.part"] }
    auto_apply: dependents
    build_to: cache
    applies_builders: ["source_gen|combining_builder"]
  dto:
    import: "package:mix_generator/mix_generator.dart"
    builder_factories: ["dtoDefinition"]
    build_extensions: { ".dart": ["dto.g.part"] }
    auto_apply: dependents
    build_to: cache
    applies_builders: ["source_gen|combining_builder"]
  utility:
    import: "package:mix_generator/mix_generator.dart"
    builder_factories: ["utilityDefinition"]
    build_extensions: { ".dart": ["utility.g.part"] }
    auto_apply: dependents
    build_to: cache
    applies_builders: ["source_gen|combining_builder"]
  # class_utility:
  #   import: "package:mix_generator/mix_generator.dart"
  #   builder_factories: ["classUtilityDefinition"]
  #   build_extensions: { ".dart": ["class_utility.g.part"] }
  #   auto_apply: dependents
  #   build_to: cache
  #   applies_builders: ["source_gen|combining_builder"]
  # tokens:
  #   import: "package:mix_generator/mix_generator.dart"
  #   builder_factories: ["tokensDefinition"]
  #   build_extensions: { ".dart": ["tokens.g.part"] }
  #   auto_apply: dependents
  #   build_to: cache
  #   applies_builders: ["source_gen|combining_builder"]
